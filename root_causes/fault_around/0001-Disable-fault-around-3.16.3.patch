From 9b7414e9f1bc0e03e774bd2fbc668eaf9195d431 Mon Sep 17 00:00:00 2001
From: LOL <you@example.com>
Date: Sun, 29 Apr 2018 03:23:53 -0400
Subject: [PATCH] Disable fault around 3.16.3

---
 mm/memory.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/mm/memory.c b/mm/memory.c
index 0a21f3d..7198344 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -2884,14 +2884,14 @@ static int do_read_fault(struct mm_struct *mm, struct vm_area_struct *vma,
 	 * if page by the offset is not ready to be mapped (cold cache or
 	 * something).
 	 */
-	if (vma->vm_ops->map_pages && !(flags & FAULT_FLAG_NONLINEAR) &&
-	    fault_around_pages() > 1) {
-		pte = pte_offset_map_lock(mm, pmd, address, &ptl);
-		do_fault_around(vma, address, pte, pgoff, flags);
-		if (!pte_same(*pte, orig_pte))
-			goto unlock_out;
-		pte_unmap_unlock(pte, ptl);
-	}
+//	if (vma->vm_ops->map_pages && !(flags & FAULT_FLAG_NONLINEAR) &&
+//	    fault_around_pages() > 1) {
+//		pte = pte_offset_map_lock(mm, pmd, address, &ptl);
+//		do_fault_around(vma, address, pte, pgoff, flags);
+//		if (!pte_same(*pte, orig_pte))
+//			goto unlock_out;
+//		pte_unmap_unlock(pte, ptl);
+//	}
 
 	ret = __do_fault(vma, address, pgoff, flags, &fault_page);
 	if (unlikely(ret & (VM_FAULT_ERROR | VM_FAULT_NOPAGE | VM_FAULT_RETRY)))
-- 
2.7.4

